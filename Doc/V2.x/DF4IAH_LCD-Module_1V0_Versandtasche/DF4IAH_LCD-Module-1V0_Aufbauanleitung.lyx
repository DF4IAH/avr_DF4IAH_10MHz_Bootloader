#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass aastex
\begin_preamble
\slugcomment{}
\shorttitle{}
\shortauthors{}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 0
\use_package amssymb 0
\use_package cancel 0
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language german
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Aufbauanleitung
\begin_inset Newline linebreak
\end_inset

DF4IAH LCD-Module V1.0
\end_layout

\begin_layout Date
2015-04-23 
\end_layout

\begin_layout Author
DF4IAH, Ulrich Habel
\end_layout

\begin_layout Section
Funktionsweise der Schaltung
\end_layout

\begin_layout Standard
\noindent
Von Conrad und anderen Elektronik-Lieferanten sind LCD-Module erhältlich,
 die zwei Textzeilen zu je 16 Zeichen bieten.
 Sie sind für elektronische Anwendungen sehr attraktiv.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 20150331_ZweiModuleAufDemSchreibtisch_IMAG3037.jpg
	lyxscale 20
	width 60page%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
2x16 LCD-Module in Betrieb
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
Angeschlossen werden diese über eine Parallelschnittstelle, die bereits
 eine Vielzahl von freien I/O-Kanälen eines anzuschließenden µControllers
 belegen würden.
 Auf der anderen Seite bieten solche µController meist auch eine I
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

C-Schnittstelle an.
 Die vorliegende Schaltung setzt zwischen einem I
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

C-Bus und den parallelen Signalen am LCD-Module um.
\begin_inset Newline newline
\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\noindent
Hier zunächst der Schaltplan:
\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Eagle-DF4IAH-LCD-Module_Schematic.png
	lyxscale 20
	width 80page%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Schaltplan
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
Über den Steckkontakt CON101 wird die Betriebsspannung von 5.0
\begin_inset space ~
\end_inset

V zugeführt.
 Die 3.3
\begin_inset space ~
\end_inset

V wird nicht benötigt, sie ist aus Kompatibilitätsgründen nur aufgeführt.
 Der I
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

C-Bus enthält neben dem obligatorischen Masse-Signal die beiden Signale
 SCL (Clock) und SDA (Datentransport).
 Der I
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

C-Bus wird hier terminiert.
 Sollte bereits eine Bus-Terminierung vorhanden sein, dann sollen die beiden
 Widerstände R111 und R112 nicht bestückt werden.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\noindent
Als Port-Expander dient der U121, ein MCP23017 Baustein, der 2x 8
\begin_inset space ~
\end_inset

Bit I/Os zur Verfügung stellt.
 Über die I
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

C-Schnittstelle wird dieses IC angesprochen.
 Mit den drei Jumper-Brücken JP120 (A0), JP121 (A1) und JP122 (A2) wird
 die I
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

C-Adresse des Port-Expanders ausgewählt.
 Somit wären bis zu acht solcher Displays an einem I
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

C-Bus betreibbar.
 Zusätzlich wird über einen I/O-Pin die Hintergrundbeleuchtung des LCD-Moduls
 aktiviert.
 Hierzu dient ein NPN-Transistor, dessen Basis-Strom über R131 begrenzt
 wird.
 Durch die Stromverstärkung von ca.
 350 ergibt sich ein für die Hintergrundbeleuchtung akzeptabler Strom.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\noindent
Die Datasheets zu dem LCD-Modul und MCP23017 werden entweder per E-Mail
 weitergereicht, können aber auch von Conrad oder anderen Elektronik-Lieferanten
 heruntergeladen werden.
\end_layout

\begin_layout Section
\noindent
Aufbau der Schaltung
\end_layout

\begin_layout Standard
\noindent
Zunächst die LCD-Anzeige entpacken und sich mit der Geometrie der Bausatz-Leiter
platte vertraut machen.
 Die Stiftleiste wird rückseitig in die LCD-Anzeige eingelötet.
 Somit wird der breite Datenbus zur Bausatz-Platine geführt.
 Die Bausatz-Platine erhält eine Buchsenleiste, welche dort eingelötet wird
 und steht dann links von der Schrift 
\begin_inset Quotes eld
\end_inset

CON151
\begin_inset Quotes erd
\end_inset

.
 Zur Kontrolle müssen die LCD-Anzeige auf die Bausatz-Platine steck- und
 lösbar sein.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Vor jedem Lötvorgang empfehle ich zusätzlich Lötflussmittel, als Stiftform
 leicht anzuwenden, dieses zu verwenden.
 Es erleichtert das Löten mit SMD ganz wesentlich.
 Weiter geht es mit dem Auflöten des IC-Sockels, dabei die Ausrichtung der
 Kerbe beachten, so dass Sockel und später auch das IC selbst mit der Kerbe
 an der Stirnseite übereinander ausgerichtet sind.
 Auf die gleiche Vorderseite kommt dann auch noch der Transistor, der wie
 aufgedruckt ausgerichtet wird.
 Je nach Transistor-Gehäusebauform kann es nötig sein, den mittleren Pin
 (Basis) etwas abzubiegen damit dieser in die zugehörige Anschluss-Bohrung
 passt.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Die übrigen Bauteile auf dieser Oberseite (
\begin_inset Quotes gld
\end_inset

Top
\begin_inset Quotes grd
\end_inset

) sind in der SMD-Bauform 0805.
 Dazu empfiehlt es sich zuerst ein Pad etwas zu verzinnen, so dass eine
 kleine Lötkugel darauf entsteht.
 So kann man bereits alle diese Pads einseitig vorbereiten.
 Im zweiten Schritt wird das entsprechende Bauteil längs nach über die Platinen-
Oberfläche geschoben, bis eine Seite des SMD-Bausteins in das flüssige Lot
 eintaucht.
 Der Blick sollte dabei senkrecht von oben durch eine Lupenleuchte erfolgen
 - so habe ich bisher die besten Resultate erzielt.
 Im dritten Schritt wird dann das noch nicht benetzte Bauteilende mit dem
 noch unvorbereiteten Pad verlötet.
 Optional kann im vierten Schritt zusätzlich Flussmittel aufgebracht werden
 und die Lötspitze für einen ganz kurzen Moment jeweils an die SMD-Enden
 angetippt werden, dadurch entsteht eine schöne, glänzende Lötstelle.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Auf der Rückseite der Leiterplatte (
\begin_inset Quotes gld
\end_inset

Bot
\begin_inset Quotes grd
\end_inset

) werden zunächst die zweipoligen Stiftpaare eingelötet.
 Dazu empfehle ich, nach dem Einsetzen der drei Stiftleisten einen Stecker
 darauf zu stecken, damit die Stifte gerade stehen, wenn diese eingelötet
 werden.
 Die Stifte sind als Durchsteckmontage vorgesehen, daher sollte das Anlöten
 recht leicht klappen.
 Bitte immer die jeweilige Stiftleiste abkühlen lassen und besser erst mit
 der nächsten nebenan beginnen, bevor der zweite Kontakt verlötet wird -
 sonst kann der Kunststoff weich werden und die Stifte stünden dann nicht
 mehr gerade aufgerichtet.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Danach kommt noch die sechspolige Stiftleiste als SMD-Bauteil: auch hier
 wird zuerst ein Lötpunkt gesetzt, vorzugsweise am Rand.
 Danach wird das Bauteil in das heiße Lötzinn eingeschoben, dabei gerade
 ausrichten.
 Nun folgen die restlichen Anschlüsse.
 Auch hier kann Flussmittel die Bearbeitung stark vereinfachen.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Nun kommt der Poti dran, der ebenfalls auf diese Rückseite gelötet wird.
 Die Voreinstellung des Potis ist kurz vor dem Rechtsanschlag.
 Hilfe: wenn ich einen Lautstärkeregler hochdrehe, dann drehe ich rechts
 herum.
 Genau in diese Richtung den R141 fast auf Vollanschlag drehen.
 Nun ist die Leiterplatte bestückt, nach Belieben kann diese mit Stehbolzen
 mit der LCD-Anzeige verbunden und somit für ein Gehäuseeinbau vorbereitet
 werden.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Der letzte Schritt des Aufbaus dreht sich um das Flachbandkabel.
 Dieses wird zuerst vorbereitet, indem das Kabel auf die benötige Länge
 gekürzt wird.
 Dann werden zwei nicht benötigte und 
\series bold
nicht farbig markierte Leitungen
\series default
 von dem Flachbandkabel entfernt, damit die sechs restlichen Adern mit den
 Steckerenden verpresst werden können.
 Nun kommen noch diese doppelreihigen Stiftleisten an die beiden Enden des
 Flachbandkabels hinzu.
 Bitte die Ausrichtung beachten:
\end_layout

\begin_layout Enumerate
Der Press-Stecker wird derart auf die I
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

C-Stiftleiste aufgesetzt, dass die Nase des Steckers von der Platine weg
 zeigt.
 Somit steht diese Nase knapp über dem Schriftzug 
\begin_inset Quotes gld
\end_inset

I
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

C
\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Enumerate
Das Flachbandkabel wird derart in den Press-Stecker eingeschoben, dass die
 farbige Ader des Flachbandkabels auf der Seite mit dem Schriftzug 
\begin_inset Quotes gld
\end_inset

1
\begin_inset Quotes grd
\end_inset

 und 
\begin_inset Quotes gld
\end_inset

2
\begin_inset Quotes grd
\end_inset

 ist.
\end_layout

\begin_layout Enumerate
Der zweite Press-Stecker wird in gleicher Ausrichtung montiert, die Nase
 zeigt somit vom Kabel weg.
 Diese Seite wird auf dem 10
\begin_inset space ~
\end_inset

MHz-RefClk-Board enden und somit das Kabel von dessen Platine wegführen.
\end_layout

\begin_layout Standard
Nachführend eine Abbildung der Kabelführung.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename /Users/espero/Documents/MANUELL/Elektronik/Elektronik_allgemein/DF4IAH_Messgeraete/Frequenznormal-10MHz_by_DF4IAH/Docs/Developement-DF4IAH/DF4IAH_RefOsc/V2.x/DF4IAH_LCD-Module_1V0_Versandtasche/20150423_Anschluss_LCD-Modul_an_RefOsc_IMAG3079.jpg
	lyxscale 20
	width 60page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
I
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

C-Kabelführung
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Somit ist der Aufbau beendet.
\end_layout

\begin_layout Section
Funktionstest
\end_layout

\begin_layout Standard
Nach dem Aufbau kann nun die Funktion getestet werden:
\end_layout

\begin_layout Itemize
Wer ein 10
\begin_inset space ~
\end_inset

MHz-RefClk-Modul hat, kann wie auf Abbildung
\begin_inset space ~
\end_inset

3 dieses mit der Anzeige-Einheit verbinden.
 Wird nun der USB-Anschluss verbunden, so initialisiert der Prozessor die
 Display-Einheit.
 Dieser schaltet das Backlight an (wenn nicht bereits umkonfiguriert wurde)
 und begrüßt mit einem Initialisierungs-Schirm.
 Nun kann am Poti R141 eine Feineinstellung des Display-Kontrasts vorgenommen
 werden.
\end_layout

\begin_layout Itemize
Wer kein 10
\begin_inset space ~
\end_inset

MHz-RefClk-Modul hat, kann die 5V-Anschlussleitung aktivieren - dabei den
 Strom auf max.
 100
\begin_inset space ~
\end_inset

mA begrenzen.
 Es sollte dann auf dem Display eine dunkle Textzeile erscheinen, die zweite
 Zeile jedoch hell bleiben, den Kontrast mit dem Poti nachregeln.
 Somit ist die Grundkonfiguration des LCD-Kontrastreglers gemacht.
 Die Stromaufnahme liegt bei rund 20
\begin_inset space ~
\end_inset

mA und die Hintergrundbeleuchtung ist aus.
\end_layout

\begin_layout Standard
Diese Dokumentation erklärt nicht die nötige Programmierung eines µControllers
 zur Ansteuerung des Displays, aber die Datasheets für die LCD-Anzeige und
 dem Port-Expander genügen, um daraus ein funktionierendes Displaysystem
 zu machen.
 Hier noch ein paar Punkte, die ich empfehlen würde:
\end_layout

\begin_layout Itemize
Die Vorgehensweise des LCD-Display zur Initialisierung wiederholt ein paar
 Initialisierungsschritte mehrfach.
 Ich empfehle genau nach Spezifikation vorzugehen um ein sicheres Anstarten
 des Moduls zu gewährleisten.
\end_layout

\begin_layout Itemize
Zum Eintakten eines Datenbytes benötigt man mehrere Zwischenschritte.
 Zuerst das neue Byte setzen, danach das Datenbyte mit dem Clock-Signal
 versehen und erneut senden, dann wieder ohne dieses Clock-Signal.
 Somit ist ein sicherer Byte-Transport sichergestellt.
\end_layout

\begin_layout Itemize
Eine Applikationssoftware würde hier vierschichtig sein:
\end_layout

\begin_deeper
\begin_layout Itemize
Zuerst eine Applikation, die das Display beschreibt (oder auch abfragt),
 
\end_layout

\begin_layout Itemize
dann ein Modul, welches eine I
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

C-Transportschicht für den µController bereit stellt (die dabei benutzte
 I
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

C-Clock-Frequenz beträgt 400
\begin_inset space ~
\end_inset

kHz und entspricht der Norm für diesen Bus),
\end_layout

\begin_layout Itemize
dann ein Modul, welches die Initialisierung und die Bedienung des MCP23017
 vornimmt,
\end_layout

\begin_layout Itemize
zuletzt ein Modul, welches die Initialisierung und die Bedienung der LCD-Anzeige
 vornimmt
\end_layout

\end_deeper
\begin_layout Standard

\end_layout

\begin_layout Standard
Bei dem Aufbau wünsche ich viel Erfolg.
 Bei evtl.
 Problemen bitte ich darum, mich zu kontaktieren, damit wir dann eine Lösung
 finden.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Vy 73
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Uli, DF4IAH
\end_layout

\begin_layout Standard

\end_layout

\end_body
\end_document
